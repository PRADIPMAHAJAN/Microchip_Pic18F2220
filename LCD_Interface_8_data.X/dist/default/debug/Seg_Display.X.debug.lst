

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Dec 28 18:30:21 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F2220
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11   000000                     
    12                           ; Generated 23/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F2220 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46   000000                     
    47                           	psect	smallconst
    48   000200                     __psmallconst:
    49                           	callstack 0
    50   000200  00                 	db	0
    51   000201                     _SEGMENT_MAP:
    52                           	callstack 0
    53   000201  3F                 	db	63
    54   000202  06                 	db	6
    55   000203  5B                 	db	91
    56   000204  4F                 	db	79
    57   000205  66                 	db	102
    58   000206  6D                 	db	109
    59   000207  7C                 	db	124
    60   000208  07                 	db	7
    61   000209  7F                 	db	127
    62   00020A  6F                 	db	111
    63   00020B                     __end_of_SEGMENT_MAP:
    64                           	callstack 0
    65   000000                     _PORTB	set	3969
    66   000000                     _TRISB	set	3987
    67   000000                     _TRISCbits	set	3988
    68   000000                     _OSCCON	set	4051
    69   00020B  00                 	db	0	; dummy byte at the end
    70   000000                     
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74   000262                     __pcinit:
    75                           	callstack 0
    76   000262                     start_initialization:
    77                           	callstack 0
    78   000262                     __initialization:
    79                           	callstack 0
    80   000262                     end_of_initialization:
    81                           	callstack 0
    82   000262                     __end_of__initialization:
    83                           	callstack 0
    84   000262  0E00               	movlw	low (__Lsmallconst shr (0+16))
    85   000264  6EF8               	movwf	tblptru,c
    86   000266  0E02               	movlw	high __Lsmallconst
    87   000268  6EF7               	movwf	tblptrh,c
    88   00026A  0100               	movlb	0
    89   00026C  EF06  F001         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	cstackCOMRAM
    92   000001                     __pcstackCOMRAM:
    93                           	callstack 0
    94   000001                     ??_main:
    95                           
    96                           ; 1 bytes @ 0x0
    97   000001                     	ds	2
    98   000003                     main@digit:
    99                           	callstack 0
   100                           
   101                           ; 1 bytes @ 0x2
   102   000003                     	ds	1
   103                           
   104 ;;
   105 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   106 ;;
   107 ;; *************** function _main *****************
   108 ;; Defined at:
   109 ;;		line 19 in file "main.c"
   110 ;; Parameters:    Size  Location     Type
   111 ;;		None
   112 ;; Auto vars:     Size  Location     Type
   113 ;;  digit           1    2[COMRAM] unsigned char 
   114 ;; Return value:  Size  Location     Type
   115 ;;                  1    wreg      void 
   116 ;; Registers used:
   117 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK0   BANK1
   123 ;;      Params:         0       0       0
   124 ;;      Locals:         1       0       0
   125 ;;      Temps:          2       0       0
   126 ;;      Totals:         3       0       0
   127 ;;Total ram usage:        3 bytes
   128 ;; This function calls:
   129 ;;		Nothing
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136   00020C                     __ptext0:
   137                           	callstack 0
   138   00020C                     _main:
   139                           	callstack 31
   140   00020C                     
   141                           ;main.c: 21:     TRISCbits.RC1 = 0x01;
   142   00020C  8294               	bsf	148,1,c	;volatile
   143   00020E                     
   144                           ;main.c: 22:     TRISB = 0x00;
   145   00020E  0E00               	movlw	0
   146   000210  6E93               	movwf	147,c	;volatile
   147                           
   148                           ;main.c: 23:     OSCCON = 0x76;
   149   000212  0E76               	movlw	118
   150   000214  6ED3               	movwf	211,c	;volatile
   151                           
   152                           ;main.c: 24:     char digit = 0;
   153   000216  0E00               	movlw	0
   154   000218  6E03               	movwf	main@digit^0,c
   155   00021A                     l702:
   156                           
   157                           ;main.c: 27:         digit++;
   158   00021A  2A03               	incf	main@digit^0,f,c
   159   00021C                     
   160                           ;main.c: 29:         if(digit > 9)
   161   00021C  0E09               	movlw	9
   162   00021E  6403               	cpfsgt	main@digit^0,c
   163   000220  EF14  F001         	goto	u11
   164   000224  EF16  F001         	goto	u10
   165   000228                     u11:
   166   000228  EF1A  F001         	goto	l708
   167   00022C                     u10:
   168   00022C                     
   169                           ;main.c: 30:         {;main.c: 31:             digit = 0;
   170   00022C  0E00               	movlw	0
   171   00022E  6E03               	movwf	main@digit^0,c
   172                           
   173                           ;main.c: 32:         }
   174   000230  EF22  F001         	goto	l710
   175   000234                     l708:
   176                           
   177                           ;main.c: 35:         {;main.c: 36:             PORTB = SEGMENT_MAP[digit];
   178   000234  5003               	movf	main@digit^0,w,c
   179   000236  0F01               	addlw	low _SEGMENT_MAP
   180   000238  6E01               	movwf	??_main^0,c
   181   00023A  C001  FFF6         	movff	??_main,tblptrl
   182   00023E                     	if	0	;There is only one active tblptr byte
   183   00023E                     	endif
   184   00023E                     	if	0	;tblptru may be non-zero
   185   00023E                     	endif
   186   00023E                     	if	0	;tblptru may be non-zero
   187   00023E                     	endif
   188   00023E  0008               	tblrd		*
   189   000240  CFF5 FF81          	movff	tablat,3969	;volatile
   190   000244                     l710:
   191                           
   192                           ;main.c: 39:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   193   000244  0E0B               	movlw	11
   194   000246  6E02               	movwf	(??_main+1)^0,c
   195   000248  0E26               	movlw	38
   196   00024A  6E01               	movwf	??_main^0,c
   197   00024C  0E5E               	movlw	94
   198   00024E                     u27:
   199   00024E  2EE8               	decfsz	wreg,f,c
   200   000250  D7FE               	bra	u27
   201   000252  2E01               	decfsz	??_main^0,f,c
   202   000254  D7FC               	bra	u27
   203   000256  2E02               	decfsz	(??_main+1)^0,f,c
   204   000258  D7FA               	bra	u27
   205   00025A  EF0D  F001         	goto	l702
   206   00025E  EF00  F000         	goto	start
   207   000262                     __end_of_main:
   208                           	callstack 0
   209                           
   210                           	psect	rparam
   211   000000                     tosu	equ	0xFFF
   212                           tosh	equ	0xFFE
   213                           tosl	equ	0xFFD
   214                           stkptr	equ	0xFFC
   215                           pclatu	equ	0xFFB
   216                           pclath	equ	0xFFA
   217                           pcl	equ	0xFF9
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           prodh	equ	0xFF4
   223                           prodl	equ	0xFF3
   224                           indf0	equ	0xFEF
   225                           postinc0	equ	0xFEE
   226                           postdec0	equ	0xFED
   227                           preinc0	equ	0xFEC
   228                           plusw0	equ	0xFEB
   229                           fsr0h	equ	0xFEA
   230                           fsr0l	equ	0xFE9
   231                           wreg	equ	0xFE8
   232                           indf1	equ	0xFE7
   233                           postinc1	equ	0xFE6
   234                           postdec1	equ	0xFE5
   235                           preinc1	equ	0xFE4
   236                           plusw1	equ	0xFE3
   237                           fsr1h	equ	0xFE2
   238                           fsr1l	equ	0xFE1
   239                           bsr	equ	0xFE0
   240                           indf2	equ	0xFDF
   241                           postinc2	equ	0xFDE
   242                           postdec2	equ	0xFDD
   243                           preinc2	equ	0xFDC
   244                           plusw2	equ	0xFDB
   245                           fsr2h	equ	0xFDA
   246                           fsr2l	equ	0xFD9
   247                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      3       3
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      3       3       1        2.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhh         2C      0       0       8        0.0%
BITBIGSFRhl         3E      0       0       9        0.0%
BITBIGSFRlh         11      0       0      10        0.0%
BITBIGSFRll          1      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BIGRAM             1FF      0       0      13        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Dec 28 18:30:21 2023

                     u10 022C                       u11 0228                       u27 024E  
                    l700 020E                      l710 0244                      l702 021A  
                    l704 021C                      l706 022C                      l708 0234  
                    l698 020C                      wreg 0FE8                     _main 020C  
                   start 0000             ___param_bank 0000                    ?_main 0001  
                  _PORTB 0F81                    _TRISB 0F93                    tablat 0FF5  
        __initialization 0262             __end_of_main 0262                   ??_main 0001  
          __activetblptr 0001                   _OSCCON 0FD3                   isa$std 0001  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0080  __end_of__initialization 0262  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0200                  __pcinit 0262  
                __ramtop 0200                  __ptext0 020C     end_of_initialization 0262  
              _TRISCbits 0F94      start_initialization 0262              __smallconst 0200  
    __end_of_SEGMENT_MAP 020B                main@digit 0003                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0200              _SEGMENT_MAP 0201  
               isa$xinst 0000  
